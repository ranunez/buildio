//
// V0BuildResponseItemModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct V0BuildResponseItemModel: Codable {

    public var abortReason: NullsString?
    public var branch: NullsString?
    public var buildNumber: Int?
    public var commitHash: NullsString?
    public var commitMessage: NullsString?
    public var commitViewUrl: NullsString?
    public var creditCost: NullsInt64?
    public var environmentPrepareFinishedAt: String?
    public var finishedAt: String?
    public var isOnHold: Bool?
    public var isProcessed: Bool?
    public var machineTypeId: NullsString?
    public var originalBuildParams: [Int]?
    public var pullRequestId: Int?
    public var pullRequestTargetBranch: NullsString?
    public var pullRequestViewUrl: NullsString?
    public var slug: String?
    public var stackIdentifier: NullsString?
    public var startedOnWorkerAt: String?
    public var status: Int?
    public var statusText: String?
    public var tag: NullsString?
    public var triggeredAt: String?
    public var triggeredBy: NullsString?
    public var triggeredWorkflow: String?

    public init(abortReason: NullsString? = nil, branch: NullsString? = nil, buildNumber: Int? = nil, commitHash: NullsString? = nil, commitMessage: NullsString? = nil, commitViewUrl: NullsString? = nil, creditCost: NullsInt64? = nil, environmentPrepareFinishedAt: String? = nil, finishedAt: String? = nil, isOnHold: Bool? = nil, isProcessed: Bool? = nil, machineTypeId: NullsString? = nil, originalBuildParams: [Int]? = nil, pullRequestId: Int? = nil, pullRequestTargetBranch: NullsString? = nil, pullRequestViewUrl: NullsString? = nil, slug: String? = nil, stackIdentifier: NullsString? = nil, startedOnWorkerAt: String? = nil, status: Int? = nil, statusText: String? = nil, tag: NullsString? = nil, triggeredAt: String? = nil, triggeredBy: NullsString? = nil, triggeredWorkflow: String? = nil) {
        self.abortReason = abortReason
        self.branch = branch
        self.buildNumber = buildNumber
        self.commitHash = commitHash
        self.commitMessage = commitMessage
        self.commitViewUrl = commitViewUrl
        self.creditCost = creditCost
        self.environmentPrepareFinishedAt = environmentPrepareFinishedAt
        self.finishedAt = finishedAt
        self.isOnHold = isOnHold
        self.isProcessed = isProcessed
        self.machineTypeId = machineTypeId
        self.originalBuildParams = originalBuildParams
        self.pullRequestId = pullRequestId
        self.pullRequestTargetBranch = pullRequestTargetBranch
        self.pullRequestViewUrl = pullRequestViewUrl
        self.slug = slug
        self.stackIdentifier = stackIdentifier
        self.startedOnWorkerAt = startedOnWorkerAt
        self.status = status
        self.statusText = statusText
        self.tag = tag
        self.triggeredAt = triggeredAt
        self.triggeredBy = triggeredBy
        self.triggeredWorkflow = triggeredWorkflow
    }

    public enum CodingKeys: String, CodingKey { 
        case abortReason = "abort_reason"
        case branch
        case buildNumber = "build_number"
        case commitHash = "commit_hash"
        case commitMessage = "commit_message"
        case commitViewUrl = "commit_view_url"
        case creditCost = "credit_cost"
        case environmentPrepareFinishedAt = "environment_prepare_finished_at"
        case finishedAt = "finished_at"
        case isOnHold = "is_on_hold"
        case isProcessed = "is_processed"
        case machineTypeId = "machine_type_id"
        case originalBuildParams = "original_build_params"
        case pullRequestId = "pull_request_id"
        case pullRequestTargetBranch = "pull_request_target_branch"
        case pullRequestViewUrl = "pull_request_view_url"
        case slug
        case stackIdentifier = "stack_identifier"
        case startedOnWorkerAt = "started_on_worker_at"
        case status
        case statusText = "status_text"
        case tag
        case triggeredAt = "triggered_at"
        case triggeredBy = "triggered_by"
        case triggeredWorkflow = "triggered_workflow"
    }

}
