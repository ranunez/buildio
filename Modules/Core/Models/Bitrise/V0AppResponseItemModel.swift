//
// V0AppResponseItemModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct V0AppResponseItemModel: Codable, Identifiable, Equatable, Hashable, Sendable {
    public static func == (lhs: V0AppResponseItemModel, rhs: V0AppResponseItemModel) -> Bool {
        return lhs.slug == rhs.slug
    }

    public var id: String {
        return owner.slug + slug
    }
    public var avatarUrl: String?
    public var isDisabled: Bool
    public var isPublic: Bool
    public var owner: V0OwnerAccountResponseModel
    public var projectType: String?
    public var provider: String
    public var repoOwner: String
    public var repoSlug: String
    public var repoUrl: String
    public var slug: String
    public var status: Int
    public var title: String
    
    public init(avatarUrl: String? = nil,
                isDisabled: Bool,
                isPublic: Bool,
                owner: V0OwnerAccountResponseModel,
                projectType: String,
                provider: String,
                repoOwner: String,
                repoSlug: String,
                repoUrl: String,
                slug: String,
                status: Int,
                title: String) {
        self.avatarUrl = avatarUrl
        self.isDisabled = isDisabled
        self.isPublic = isPublic
        self.owner = owner
        self.projectType = projectType
        self.provider = provider
        self.repoOwner = repoOwner
        self.repoSlug = repoSlug
        self.repoUrl = repoUrl
        self.slug = slug
        self.status = status
        self.title = title
    }
    
    public static func preview() -> Self {
        return V0AppResponseItemModel(avatarUrl: nil,
                                      isDisabled: false,
                                      isPublic: false,
                                      owner: V0OwnerAccountResponseModel.preview(),
                                      projectType: "projectType",
                                      provider: "provider",
                                      repoOwner: "repoOwner",
                                      repoSlug: "repoSlug",
                                      repoUrl: "repoUrl",
                                      slug: "slug",
                                      status: 1,
                                      title: "title")
    }
}
